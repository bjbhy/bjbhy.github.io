<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bai_XiaoBai</title>
  <subtitle>总有一天，我有属于我的天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bjbhy.github.io/"/>
  <updated>2016-11-30T06:48:23.000Z</updated>
  <id>https://bjbhy.github.io/</id>
  
  <author>
    <name>白浩洋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小知识</title>
    <link href="https://bjbhy.github.io/2016/11/29/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>https://bjbhy.github.io/2016/11/29/小知识/</id>
    <published>2016-11-29T06:26:07.000Z</published>
    <updated>2016-11-30T06:48:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.短信验证码倒计时</p>
<!---->
  <figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  __block <span class="keyword">int</span> timeout= <span class="number">59</span>; <span class="comment">//倒计时时间</span></span><br><span class="line">  <span class="built_in">dispatch_queue_t</span> queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>);</span><br><span class="line">  dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, <span class="number">0</span>, <span class="number">0</span>,queue);</span><br><span class="line">  dispatch_source_set_timer(_timer,dispatch_walltime(<span class="literal">NULL</span>, <span class="number">0</span>),<span class="number">1.0</span>*<span class="built_in">NSEC_PER_SEC</span>, <span class="number">0</span>); <span class="comment">//每秒执行</span></span><br><span class="line">  dispatch_source_set_event_handler(_timer, ^&#123;</span><br><span class="line">    <span class="keyword">if</span>(timeout&lt;=<span class="number">0</span>)&#123; <span class="comment">//倒计时结束，关闭</span></span><br><span class="line">        dispatch_source_cancel(_timer);</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            <span class="comment">//设置界面的按钮显示 根据自己需求设置</span></span><br><span class="line">            [_codeButton setTitle:<span class="string">@"获取验证码"</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">            _codeButton.userInteractionEnabled = <span class="literal">YES</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//            int minutes = timeout / 60;</span></span><br><span class="line">        <span class="keyword">int</span> seconds = timeout % <span class="number">60</span>;</span><br><span class="line">        <span class="built_in">NSString</span> *strTime = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.2d"</span>, seconds];</span><br><span class="line">        <span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</span><br><span class="line">            <span class="comment">//设置界面的按钮显示 根据自己需求设置</span></span><br><span class="line">            [<span class="built_in">UIView</span> beginAnimations:<span class="literal">nil</span> context:<span class="literal">nil</span>];</span><br><span class="line">            [<span class="built_in">UIView</span> setAnimationDuration:<span class="number">1</span>];</span><br><span class="line">            [_codeButton setTitle:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@秒重发"</span>,strTime] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">            [<span class="built_in">UIView</span> commitAnimations];</span><br><span class="line">            _codeButton.userInteractionEnabled = <span class="literal">NO</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        timeout--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">dispatch_resume(_timer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.获取电池电量(一般用百分数表示,大家自行处理就好)</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span>(CGFloat)<span class="selector-tag">getBatteryQuantity</span></span><br><span class="line">&#123;    </span><br><span class="line">    return <span class="selector-attr">[[UIDevice currentDevice]</span> <span class="selector-tag">batteryLevel</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.获取电池状态(UIDeviceBatteryState为枚举类型)<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span>(UIDeviceBatteryState)<span class="selector-tag">getBatteryStauts</span></span><br><span class="line">&#123;    </span><br><span class="line">    return <span class="selector-attr">[UIDevice currentDevice]</span><span class="selector-class">.batteryState</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>4.获取总内存大小<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span>(long long)<span class="selector-tag">getTotalMemorySize</span></span><br><span class="line">&#123;    </span><br><span class="line">    return <span class="selector-attr">[NSProcessInfo processInfo]</span><span class="selector-class">.physicalMemory</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>5.获取当前可用内存<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">long</span> <span class="keyword">long</span>)getAvailableMemorySize</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">vm_statistics_data_t</span> vmStats;</span><br><span class="line">    <span class="keyword">mach_msg_type_number_t</span> infoCount = HOST_VM_INFO_COUNT;</span><br><span class="line">    <span class="keyword">kern_return_t</span> kernReturn = host_statistics(mach_host_self(), HOST_VM_INFO, (<span class="keyword">host_info_t</span>)&amp;vmStats, &amp;infoCount);</span><br><span class="line">    <span class="keyword">if</span> (kernReturn != KERN_SUCCESS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> NSNotFound;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ((vm_page_size * vmStats.free_count + vm_page_size * vmStats.inactive_count));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>6.获取已使用内存<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  - (<span class="keyword">double</span>)getUsedMemory</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">task_basic_info_data_t</span> taskInfo;</span><br><span class="line">  <span class="keyword">mach_msg_type_number_t</span> infoCount = TASK_BASIC_INFO_COUNT;</span><br><span class="line">  <span class="keyword">kern_return_t</span> kernReturn = task_info(mach_task_self(),</span><br><span class="line">                                       TASK_BASIC_INFO,</span><br><span class="line">                                       (<span class="keyword">task_info_t</span>)&amp;taskInfo,</span><br><span class="line">                                       &amp;infoCount);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (kernReturn != KERN_SUCCESS</span><br><span class="line">      ) &#123;</span><br><span class="line">    <span class="keyword">return</span> NSNotFound;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> taskInfo.resident_size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>7.获取总磁盘容量<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">long</span> <span class="keyword">long</span>)getTotalDiskSize</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> statfs buf;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> freeSpace = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (statfs(<span class="string">"/var"</span>, &amp;buf) &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        freeSpace = (<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)(buf.f_bsize * buf.f_blocks);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> freeSpace;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>8.获取可用磁盘容量<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">long</span> <span class="keyword">long</span>)getAvailableDiskSize</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> statfs buf;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> freeSpace = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (statfs(<span class="string">"/var"</span>, &amp;buf) &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        freeSpace = (<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)(buf.f_bsize * buf.f_bavail);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> freeSpace;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>9.容量转换<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">NSString</span> *)fileSizeToString:(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)fileSize</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSInteger</span> KB = <span class="number">1024</span>;</span><br><span class="line">    <span class="built_in">NSInteger</span> MB = KB*KB;</span><br><span class="line">    <span class="built_in">NSInteger</span> GB = MB*KB;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fileSize &lt; <span class="number">10</span>)  &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@"0 B"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (fileSize &lt; KB)    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@"&lt; 1 KB"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (fileSize &lt; MB)    &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.1f KB"</span>,((<span class="built_in">CGFloat</span>)fileSize)/KB];</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (fileSize &lt; GB)    &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.1f MB"</span>,((<span class="built_in">CGFloat</span>)fileSize)/MB];</span><br><span class="line">    &#125;<span class="keyword">else</span>   &#123;</span><br><span class="line">         <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.1f GB"</span>,((<span class="built_in">CGFloat</span>)fileSize)/GB];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>10.型号<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)<span class="string">getCurrentDeviceModel:</span>(UIViewController *)controller</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> mib[<span class="number">2</span>];</span><br><span class="line">    size_t len;</span><br><span class="line">    <span class="keyword">char</span> *machine;</span><br><span class="line"></span><br><span class="line">    mib[<span class="number">0</span>] = CTL_HW;</span><br><span class="line">    mib[<span class="number">1</span>] = HW_MACHINE;</span><br><span class="line">    sysctl(mib, <span class="number">2</span>, NULL, &amp;len, NULL, <span class="number">0</span>);</span><br><span class="line">    machine = malloc(len);</span><br><span class="line">    sysctl(mib, <span class="number">2</span>, machine, &amp;len, NULL, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    NSString *platform = [NSString <span class="string">stringWithCString:</span>machine <span class="string">encoding:</span>NSASCIIStringEncoding];</span><br><span class="line">    free(machine);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone3,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 4 (A1332)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone3,2"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 4 (A1332)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone3,3"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 4 (A1349)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone4,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 4s (A1387/A1431)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone5,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5 (A1428)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone5,2"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5 (A1429/A1442)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone5,3"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5c (A1456/A1532)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone5,4"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5c (A1507/A1516/A1526/A1529)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone6,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5s (A1453/A1533)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone6,2"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 5s (A1457/A1518/A1528/A1530)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone7,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 6 Plus (A1522/A1524)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone7,2"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 6 (A1549/A1586)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone8,1"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 6s"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPhone8,2"</span>]) <span class="keyword">return</span> @<span class="string">"iPhone 6s Plus"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPod1,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPod Touch 1G (A1213)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPod2,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPod Touch 2G (A1288)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPod3,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPod Touch 3G (A1318)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPod4,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPod Touch 4G (A1367)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPod5,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPod Touch 5G (A1421/A1509)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad1,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 1G (A1219/A1337)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 2 (A1395)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,2"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 2 (A1396)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,3"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 2 (A1397)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,4"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 2 (A1395+New Chip)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,5"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 1G (A1432)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,6"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 1G (A1454)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad2,7"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 1G (A1455)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 3 (A1416)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,2"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 3 (A1403)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,3"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 3 (A1430)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,4"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 4 (A1458)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,5"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 4 (A1459)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad3,6"</span>])   <span class="keyword">return</span> @<span class="string">"iPad 4 (A1460)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,1"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Air (A1474)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,2"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Air (A1475)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,3"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Air (A1476)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,4"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 2G (A1489)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,5"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 2G (A1490)"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"iPad4,6"</span>])   <span class="keyword">return</span> @<span class="string">"iPad Mini 2G (A1491)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"i386"</span>])      <span class="keyword">return</span> @<span class="string">"iPhone Simulator"</span>;</span><br><span class="line">    <span class="keyword">if</span> ([platform <span class="string">isEqualToString:</span>@<span class="string">"x86_64"</span>])    <span class="keyword">return</span> @<span class="string">"iPhone Simulator"</span>;</span><br><span class="line">    <span class="keyword">return</span> platform;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以根据自己的需求增改。有人说也可以按照手机屏幕来判断，但5和5s/5c等手机屏幕相同尺寸则无法判断。。。我只做了iPhone的机型，所以iPad和iPod Touch的信息并没有更新到最新，也请朋友们补充。<br>11.IP地址<br><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">- (NSString *)deviceIPAdress &#123;</span><br><span class="line">    NSString *address = @<span class="string">"an error occurred when obtaining ip address"</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ifaddrs</span></span> *interfaces = NULL;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ifaddrs</span></span> *temp_addr = NULL;</span><br><span class="line">    <span class="keyword">int</span> success = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    success = getifaddrs(&amp;interfaces);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (success == <span class="number">0</span>) &#123; <span class="comment">// 0 表示获取成功</span></span><br><span class="line"></span><br><span class="line">        temp_addr = interfaces;</span><br><span class="line">        <span class="keyword">while</span> (temp_addr != NULL) &#123;</span><br><span class="line">            <span class="keyword">if</span>( temp_addr-&gt;ifa_addr-&gt;sa_family == AF_INET) &#123;</span><br><span class="line">                <span class="comment">// Check if interface is en0 which is the wifi connection on the iPhone</span></span><br><span class="line">                <span class="keyword">if</span> ([[NSString stringWithUTF8String:temp_addr-&gt;ifa_name] isEqualToString:@<span class="string">"en0"</span>]) &#123;</span><br><span class="line">                    <span class="comment">// Get NSString from C String</span></span><br><span class="line">                    address = [NSString stringWithUTF8String:inet_ntoa(((<span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span></span> *)temp_addr-&gt;ifa_addr)-&gt;sin_addr)];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            temp_addr = temp_addr-&gt;ifa_next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    freeifaddrs(interfaces);</span><br><span class="line">    <span class="keyword">return</span> address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>12.当前手机连接的WIFI名称(SSID)<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSString</span> *)getWifiName</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *wifiName = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CFArrayRef</span> wifiInterfaces = CNCopySupportedInterfaces();</span><br><span class="line">    <span class="keyword">if</span> (!wifiInterfaces) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSArray</span> *interfaces = (__bridge <span class="built_in">NSArray</span> *)wifiInterfaces;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *interfaceName <span class="keyword">in</span> interfaces) &#123;</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> dictRef = CNCopyCurrentNetworkInfo((__bridge <span class="built_in">CFStringRef</span>)(interfaceName));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dictRef) &#123;</span><br><span class="line">            <span class="built_in">NSDictionary</span> *networkInfo = (__bridge <span class="built_in">NSDictionary</span> *)dictRef;</span><br><span class="line"></span><br><span class="line">            wifiName = [networkInfo objectForKey:(__bridge <span class="built_in">NSString</span> *)kCNNetworkInfoKeySSID];</span><br><span class="line"></span><br><span class="line">            <span class="built_in">CFRelease</span>(dictRef);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CFRelease</span>(wifiInterfaces);</span><br><span class="line">    <span class="keyword">return</span> wifiName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.短信验证码倒计时&lt;/p&gt;
&lt;!----&gt;
  &lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
    
    </summary>
    
    
      <category term="文章" scheme="https://bjbhy.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>iOS 性能优化记录</title>
    <link href="https://bjbhy.github.io/2016/10/12/iOS-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%AE%B0%E5%BD%95/"/>
    <id>https://bjbhy.github.io/2016/10/12/iOS-性能优化记录/</id>
    <published>2016-10-12T04:32:38.000Z</published>
    <updated>2016-10-12T04:35:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>1：应用启动时间 应用启动时，只加载启动相关的资源和必须在启动时加载的资源。</p>
<p>2：本地图片加载方式 本地图片加载常用方法有两种： (1)，[UIImage imageNamed:@””] 图片多次使用时使用，需要使用此方式加入缓存 (2)，[[UIImage alloc] initWithContentsOfFile:@””] 图片不常使用时，不使用缓存</p>
<p>3：不要阻塞主线程 开发中除了UI处理外，其它任务尽量放在后台线程加载。</p>
<p>4：UIView (1)，如果你的View是透明的，需要设置opaque为YES。 (2)，使用UITableView和UICollectionView的重用，并缓存动态Cell的高度。 (3), 延迟加载不急需要的Views。 (4)，尽量避免代码裁剪图片，如果必须需在后台线程处理。</p>
<p>5：缓存 缓存需要重复显示的数据，像网络请求、图片。</p>
<p>6：避免对象创建时过多消耗资源 假设应用中多次使用到日期处理，将保持日期对象全局唯一。</p>
<p>7：释放对象 (1)，ARC中创建对象过多时，内存会持续升高，在需要时添加自动释放池释放不需要的资源。 (2)，及时释放自己开辟的内存空间。</p>
<p>8：防止循环引用 (1)，在头文件中尽量避免import导入头文件，使用@class 声明类，在.m文件中#import。 (2)，在设置代理/block中使用相应的关键字引用对象。</p>
<p>9：数据存储 数据存储大致分plist、对象归档、sqlite。NSUserDefault适合存储小量数据,私密信息使用Keychain, sqlite适合大量数据，归档性能较低,尽量避免使用。</p>
<p>10：内存警告处理 当系统发出内存警告时，释放不必要的数据的三种方式。 AppDelegate中实现applicationDidReceiveMemoryWarning UIViewController 重写didReceiveMemoryWarning 注册通知：UIApplicationDidReceiveMemoryWarningNotification<br>11：性能检测 静态分析APP：菜单-Product-Analyze 可以定位未使用的变量，内存泄漏 分析APP每个操作占用时间: Instruments-Time profiler。 动态分析内存泄漏：Instruments-Leaks。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1：应用启动时间 应用启动时，只加载启动相关的资源和必须在启动时加载的资源。&lt;/p&gt;
&lt;p&gt;2：本地图片加载方式 本地图片加载常用方法有两种： (1)，[UIImage imageNamed:@””] 图片多次使用时使用，需要使用此方式加入缓存 (2)，[[UIImage 
    
    </summary>
    
    
      <category term="文章" scheme="https://bjbhy.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>iOS数据加密</title>
    <link href="https://bjbhy.github.io/2016/09/27/iOS%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86/"/>
    <id>https://bjbhy.github.io/2016/09/27/iOS数据加密/</id>
    <published>2016-09-27T06:22:05.000Z</published>
    <updated>2016-09-27T06:35:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>  关于数据加密的重要性，大家有目共睹，前段时间在论坛上看到，一个公司的项目的一个web被黑客破解，关键是该公司的项目中，很多重要的业务逻辑都放在了改web中去处理，造成的结果就是黑客写了一个脚本，不停的去访问该公司的服务器，服务器被卡爆。所以在此总结一下要加密时需要处理的几个重点吧！</p>
<ul>
<li>应用代码混淆，可参考国外开发者写的<a href="https://github.com/Polidea/ios-class-guard&quot;" target="_blank" rel="external">方案</a>，这个还有点bug，需要懂一些shell脚本。</li>
<li>链接一定要采用https，而且绑定证书，用AFNetworking非常方便。</li>
<li>关键的传输数据要进行数字信封（随机数加时间戳），数字摘要(md5),不对称加密(rsa)综合加固</li>
<li>关键业务的js通过加密的方式传回客户端，客户端解密再执行</li>
<li>对重要页面和功能进行埋点和添加时间戳，后台定义规则，发现异常的功能调用，立即进行系统报警，引起报警的设备，IP，帐号进行异常处理</li>
<li>需要登录功能的一定要绑定设备，更换设备登陆的进行短信验</li>
<li>对越狱的设备进行提醒和限制某些功能的使用！</li>
</ul>
<p>希望大家的项目都永无Bug和漏洞！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  关于数据加密的重要性，大家有目共睹，前段时间在论坛上看到，一个公司的项目的一个web被黑客破解，关键是该公司的项目中，很多重要的业务逻辑都放在了改web中去处理，造成的结果就是黑客写了一个脚本，不停的去访问该公司的服务器，服务器被卡爆。所以在此总结一下要加密时需要处理的
    
    </summary>
    
      <category term="文章" scheme="https://bjbhy.github.io/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="iOS" scheme="https://bjbhy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>环信卡片相关</title>
    <link href="https://bjbhy.github.io/2016/07/22/%E7%8E%AF%E4%BF%A1%E5%8D%A1%E7%89%87%E7%9B%B8%E5%85%B3/"/>
    <id>https://bjbhy.github.io/2016/07/22/环信卡片相关/</id>
    <published>2016-07-22T10:19:29.000Z</published>
    <updated>2016-09-27T06:39:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>###说一下最近集成环信的感想吧</p>
<p>自从项目中用到环信，其实还是有点纠结的，特别是本次项目中需要用到卡片功能 类似于这样的</p>
<p><img src="http://o97zrcc31.bkt.clouddn.com/%E7%8E%AF%E4%BF%A1%E5%8D%A1%E7%89%87%E7%A4%BA%E4%BE%8B.jpg" alt="环信示例图片"></p>
<p>然后看一下最后的集成效果</p>
<p><img src="http://o97zrcc31.bkt.clouddn.com/%E7%A4%BA%E4%BE%8B2.png" alt="效果图"></p>
<p>是这样的  虽然跟最后还是有点差别 但样子差不多已经出来了，说一下思路吧 </p>
<p>在看之前我默认你已经集成了单聊，并且知道ChatDemo3.x中的 ChatViewController是怎么用的了 好现在我们一起来做卡片吧，其实在做之前 非常的简单 你需要去环信的官方论坛去查看文档，<a href="http://docs.easemob.com/im/300iosclientintegration/85easeuiguide" target="_blank" rel="external">官方文档</a>,  直接拖到中部，然后查看聊天会话扩展板块。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span><br><span class="line"> @method</span><br><span class="line"> @brief 获取消息自定义cell</span><br><span class="line"> @discussion 用户根据messageModel判断是否显示自定义cell。返回nil显示默认cell，否则显示用户自定义cell</span><br><span class="line"> @param tableView 当前消息视图的tableView</span><br><span class="line"> @param messageModel 消息模型</span><br><span class="line"> @result 返回用户自定义cell</span><br><span class="line"> */</span></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)messageViewController:(<span class="built_in">UITableView</span> *)tableView</span><br><span class="line">                       cellForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)messageModel;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*!</span><br><span class="line"> @method</span><br><span class="line"> @brief 获取消息cell高度</span><br><span class="line"> @discussion 用户根据messageModel判断，是否自定义显示cell的高度</span><br><span class="line"> @param viewController 当前消息视图</span><br><span class="line"> @param messageModel 消息模型</span><br><span class="line"> @param cellWidth 视图宽度</span><br><span class="line"> @result 返回用户自定义cell</span><br><span class="line"> */</span></span><br><span class="line">- (<span class="built_in">CGFloat</span>)messageViewController:(EaseMessageViewController *)viewController</span><br><span class="line">           heightForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)messageModel</span><br><span class="line">                   withCellWidth:(<span class="built_in">CGFloat</span>)cellWidth;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//具体创建自定义Cell的样例：</span></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)messageViewController:(<span class="built_in">UITableView</span> *)tableView cellForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)model</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//样例为如果消息是文本消息显示用户自定义cell</span></span><br><span class="line">    <span class="keyword">if</span> (model.bodyType == eMessageBodyType_Text) &#123;</span><br><span class="line">        <span class="built_in">NSString</span> *CellIdentifier = [CustomMessageCell cellIdentifierWithModel:model];</span><br><span class="line">        <span class="comment">//CustomMessageCell为用户自定义cell,继承了EaseBaseMessageCell</span></span><br><span class="line">        CustomMessageCell *cell = (CustomMessageCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];</span><br><span class="line">        <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</span><br><span class="line">            cell = [[CustomMessageCell alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:CellIdentifier model:model];</span><br><span class="line">            cell.selectionStyle = <span class="built_in">UITableViewCellSelectionStyleNone</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cell.model = model;</span><br><span class="line">        <span class="keyword">return</span> cell;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">- (<span class="built_in">CGFloat</span>)messageViewController:(EaseMessageViewController *)viewController</span><br><span class="line">           heightForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)messageModel</span><br><span class="line">                   withCellWidth:(<span class="built_in">CGFloat</span>)cellWidth</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//样例为如果消息是文本消息使用用户自定义cell的高度</span></span><br><span class="line">    <span class="keyword">if</span> (messageModel.bodyType == EMMessageBodyTypeText) &#123;</span><br><span class="line">        <span class="comment">//CustomMessageCell为用户自定义cell,继承了EaseBaseMessageCell</span></span><br><span class="line">        <span class="keyword">return</span> [CustomMessageCell cellHeightWithModel:messageModel];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.</span>f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在这个板块中的代码复制到ChatViewController中。 由于ChatViewController继承了EaseMessageViewControllerDelegate 所以可以直接重写上部的两个方法。</p>
<p>在自定制卡片时，需要用到自定制的Cell，在自定制的Cell中需要自己布局,包括气泡头像等控件。然后直接在- (UITableViewCell <em>)messageViewController:(UITableView </em>)tableView cellForMessageModel:(id<imessagemodel>)model中重写就可以。</imessagemodel></p>
<p>在这里需要说一下，官方给的例子是用类型作为判断条件的，在我们自定制的时候，不能再用发送的消息类型来判断类型了，只能通过扩展字段发过来的某个字段来判断这个消息是否为卡片消息，是的话再加载卡片的样式。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark - EaseMessageViewControllerDelegate</span></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)messageViewController:(<span class="built_in">UITableView</span> *)tableView</span><br><span class="line">                       cellForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)messageModel&#123;</span><br><span class="line">        <span class="comment">//样例为如果消息是文本消息显示用户自定义cell</span></span><br><span class="line">  <span class="built_in">NSDictionary</span> *dict=messageModel.message.ext;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"dict1~~~~,%@"</span>,dict);</span><br><span class="line">    <span class="built_in">NSString</span> *keys=[dict objectForKey:<span class="string">@"content"</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,keys);</span><br><span class="line">    <span class="keyword">if</span> (keys.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">NSString</span> *CellIdentifier = [XHTableViewCardCell cellIdentifierWithModel:messageModel];</span><br><span class="line">        <span class="comment">//CustomMessageCell为用户自定义cell,继承了EaseBaseMessageCell</span></span><br><span class="line">        XHTableViewCardCell *cell = (XHTableViewCardCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];</span><br><span class="line">        <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</span><br><span class="line">            cell = [[XHTableViewCardCell alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span> reuseIdentifier:CellIdentifier];</span><br><span class="line">            cell.selectionStyle = <span class="built_in">UITableViewCellSelectionStyleNone</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cell.model = messageModel;</span></span><br><span class="line">        [cell loadMainUI:messageModel];</span><br><span class="line">        <span class="keyword">return</span> cell;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="built_in">CGFloat</span>)messageViewController:(EaseMessageViewController *)viewController</span><br><span class="line">           heightForMessageModel:(<span class="keyword">id</span>&lt;IMessageModel&gt;)messageModel</span><br><span class="line">                   withCellWidth:(<span class="built_in">CGFloat</span>)cellWidth</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//样例为如果消息是文本消息使用用户自定义cell的高度</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dict=messageModel.message.ext;</span><br><span class="line">    <span class="built_in">NSString</span> *keys=[dict objectForKey:<span class="string">@"content"</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,keys);</span><br><span class="line">    <span class="keyword">if</span> (keys.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//CustomMessageCell为用户自定义cell,继承了EaseBaseMessageCell</span></span><br><span class="line">        <span class="keyword">return</span> [XHTableViewCardCell cellHeightWithModel:messageModel];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.</span>f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我的代码就是这样，写的不好，慢慢修改。如果有幸对你有用，并且尚有问题，可以联系我。</p>
<p>QQ：897345401</p>
<p>欢迎叨扰！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###说一下最近集成环信的感想吧&lt;/p&gt;
&lt;p&gt;自从项目中用到环信，其实还是有点纠结的，特别是本次项目中需要用到卡片功能 类似于这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o97zrcc31.bkt.clouddn.com/%E7%8E%AF%E4%BF%A1%
    
    </summary>
    
      <category term="文章" scheme="https://bjbhy.github.io/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="iOS" scheme="https://bjbhy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>比较好的文章收集</title>
    <link href="https://bjbhy.github.io/2016/07/06/%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84%E6%96%87%E7%AB%A0%E6%94%B6%E9%9B%86/"/>
    <id>https://bjbhy.github.io/2016/07/06/比较好的文章收集/</id>
    <published>2016-07-06T07:22:27.000Z</published>
    <updated>2016-07-06T07:26:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.比较常用的 27个提升效率的iOS开源库推荐</p>
<p><a href="http://blog.csdn.net/guojin08/article/details/47085623" target="_blank" rel="external">点此去查看原文</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.比较常用的 27个提升效率的iOS开源库推荐&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/guojin08/article/details/47085623&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点此去查看原文&lt;/
    
    </summary>
    
      <category term="文章" scheme="https://bjbhy.github.io/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="iOS" scheme="https://bjbhy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>环信相关的东西（随手记）</title>
    <link href="https://bjbhy.github.io/2016/06/30/%E7%8E%AF%E4%BF%A1%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%9C%E8%A5%BF%EF%BC%88%E9%9A%8F%E6%89%8B%E8%AE%B0%EF%BC%89/"/>
    <id>https://bjbhy.github.io/2016/06/30/环信相关的东西（随手记）/</id>
    <published>2016-06-30T10:35:34.000Z</published>
    <updated>2016-06-30T11:14:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做得项目中需要用到即时聊天，不多说，首先想到的就是环信，但真正做起来其实还是有点难度的</p>
<hr>
<p>不多说 首先是去集成环信  在集成第三方控件时，我一般比较喜欢使用Cocopods工具来管理我自己的额第三方软件 </p>
<p>新建一个podFile  编辑  输入 </p>
<pre><code>pod &apos;HyphenateFullSDK&apos;, :git =&gt; &apos;https://github.com/easemob/hyphenate-full-cocoapods.git&apos;
</code></pre><p>此为环信的3.x的SDK，由于本次的项目用到了实时通话和视频通话，所以我就选择了更加全面的HyphenateFullSdk </p>
<p>用CocoPods下载完之后 编译工程，查看是否出错，如果没有出错，那么恭喜你，你的集成已经没有问题了，如果有按照官方文档去一步一步添加环信所需要的库文件。</p>
<p>我们在用环信的IM时 需要到环信的官网上注册账号来创建一个应用，在创建完之后，环信会返回一个appKey  像这样 <img src="http://o97zrcc31.bkt.clouddn.com/QQ20160630-0.png" alt="环信AppKey"></p>
<p>在我们测试的时候 我们可以把用户注册模式调整为开放注册。</p>
<p>然后我们需要在AppDelegate中去初始化环信  代码如下</p>
<pre><code>EMOptions *options = [EMOptions optionsWithAppkey:@&quot;yunjiankang#manifests&quot;];
options.apnsCertName = @&quot;nil&quot;;//这个是上传的环信的证书名字，没有则为nil
[[EMClient sharedClient] initializeSDKWithOptions:options];
</code></pre><p>初始化之后 我们可以创建一个新的登录或注册类去完成登录注册</p>
<p>登录方法如下</p>
<pre><code>此为异步登录方法
dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
    EMError *error = [[EMClient sharedClient] loginWithUsername:@&quot;1&quot; password:@&quot;1&quot;];
    dispatch_async(dispatch_get_main_queue(), ^{

        if (!error) {
            NSLog(@&quot;登录成功&quot;);
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_LOGINCHANGE object:@YES];

        } else {
            NSLog(@&quot;登录失败---------%@&quot;, error);
        }
    });
});
</code></pre><p> 注册方法如下</p>
<pre><code> EMError *error = [[EMClient sharedClient] registerWithUsername:self.userTextFiled.text password:self.passwordTextFiled.text];
if (error==nil) {
    [[DataCenter shareInstance]showWithCustomView:self title:@&quot;注册成功&quot;];
}
else{
    NSLog(@&quot;%@&quot;,error.errorDescription);
}
</code></pre><p>在注册完成之后可以去进行登录  登录完成之后可以创建会话内容 在3.x中用ChatViewController来创建一个会话聊天 </p>
<p>要注意 2.x和3.x的实现类是不一样的。</p>
<p>创建会话的代码如下</p>
<pre><code>ChatViewController *chatController = [[ChatViewController alloc] initWithConversationChatter:_username.text conversationType:EMConversationTypeChat];
[self.navigationController pushViewController:chatController animated:YES];
</code></pre><p>其中里面的Chatter就是聊天的对象  也就是要聊天的另一个人的昵称  两端同时登录 即可实现聊天！</p>
<p>目前仅仅是一个非常简单的单聊集成，后期还会需要一些视频通话及语音聊天的功能的实现，后续再写！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在做得项目中需要用到即时聊天，不多说，首先想到的就是环信，但真正做起来其实还是有点难度的&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;不多说 首先是去集成环信  在集成第三方控件时，我一般比较喜欢使用Cocopods工具来管理我自己的额第三方软件 &lt;/p&gt;
&lt;p&gt;新建一个podFile  
    
    </summary>
    
      <category term="编程" scheme="https://bjbhy.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS" scheme="https://bjbhy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS基础-刮开涂层（刮刮乐）</title>
    <link href="https://bjbhy.github.io/2016/06/28/iOS%E5%9F%BA%E7%A1%80-%E5%88%AE%E5%BC%80%E6%B6%82%E5%B1%82%EF%BC%88%E5%88%AE%E5%88%AE%E4%B9%90%EF%BC%89/"/>
    <id>https://bjbhy.github.io/2016/06/28/iOS基础-刮开涂层（刮刮乐）/</id>
    <published>2016-06-28T04:06:06.000Z</published>
    <updated>2016-06-28T04:34:36.000Z</updated>
    
    <content type="html"><![CDATA[<p> 先上一张效果图</p>
<p><img src="http://o97zrcc31.bkt.clouddn.com/1523603-a7463d8a756fd930.gif" alt="Mou 刮刮乐"></p>
<p>1.设置开后的文本</p>
<pre><code>IUILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(7, 50, 400, 400)];

label.text = @&quot;离思五首\n元稹\n曾经沧海难为水,\n除却巫山不是云!\n取次花丛懒回顾,\n半缘修道半缘君!\n&quot;;

label.numberOfLines = 0;

label.backgroundColor = [UIColor colorWithRed:(arc4random()%173)/346.0 + 0.5 green:(arc4random()%173)/346.0 + 0.5  blue:(arc4random()%173)/346.0 + 0.5  alpha: 1];

label.font = [UIFont systemFontOfSize:30];

label.textAlignment = NSTextAlignmentCenter;

[self.view addSubview:label];
</code></pre><p>2.设置遮挡在外面的image图片</p>
<pre><code>self.imageView = [[UIImageView alloc]initWithFrame:CGRectMake(7, 50, 400, 400)];

self.imageView.image = [UIImage imageNamed:@&quot;可达鸭&quot;];

[self.view addSubview:self.imageView ];
</code></pre><p>3.在touchesMoved方法中实现刮刮乐的操作效果</p>
<pre><code>- (void)touchesMoved:(NSSet&lt;UITouch *&gt; *)touches withEvent:(UIEvent *)event{

 // 触摸任意位置

 UITouch *touch = touches.anyObject;

 // 触摸位置在图片上的坐标

 CGPoint cententPoint = [touch locationInView:self.imageView];
 // 设置清除点的大小

 CGRect  rect = CGRectMake(cententPoint.x, cententPoint.y, 20, 20);
 // 默认是去创建一个透明的视图  
                 UIGraphicsBeginImageContextWithOptions(self.imageView.bounds.size, NO, 0);  
 // 获取上下文(画板)

 CGContextRef ref = UIGraphicsGetCurrentContext();
// 把imageView的layer映射到上下文中
 [self.imageView.layer renderInContext:ref];

 // 清除划过的区域
 CGContextClearRect(ref, rect);  
 // 获取图片
 UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
 // 结束图片的画板, (意味着图片在上下文中消失)
 UIGraphicsEndImageContext();
 self.imageView.image = image;
</code></pre><p> 其实本这个想法非常简单  想要实现刮刮乐效果 只需要在原来的Label上加上一层图片 然后获取到该图片的layer 利用触摸滑动的方法去生成这个效果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 先上一张效果图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o97zrcc31.bkt.clouddn.com/1523603-a7463d8a756fd930.gif&quot; alt=&quot;Mou 刮刮乐&quot;&gt;&lt;/p&gt;
&lt;p&gt;1.设置开后的文本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I
    
    </summary>
    
      <category term="编程" scheme="https://bjbhy.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="iOS" scheme="https://bjbhy.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo用法全纪录</title>
    <link href="https://bjbhy.github.io/2016/06/23/Hexo%E7%94%A8%E6%B3%95%E5%85%A8%E7%BA%AA%E5%BD%95/"/>
    <id>https://bjbhy.github.io/2016/06/23/Hexo用法全纪录/</id>
    <published>2016-06-23T11:32:26.000Z</published>
    <updated>2016-06-24T03:56:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>date: 2016-06-23 19:32:26</p>
<h6 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h6><ol>
<li>在mac环境下需要配置nodejs环境，到nodejs官网上下载.pkg安装包进行安装。</li>
<li>安装完之后，在mac的磁盘上新建一个文件夹用于存储博客相关文档内容</li>
<li>cd到该文件夹下，然后加入hexo主程序和安装npm 命令：$ hexo init &amp;&amp; npm install</li>
<li><p>安装完成后可以用Finder查看该文件夹下的目录结构 大致为<br>scaffolds 工具模板</p>
<p>scripts hexo的功能js</p>
<p>source 博客资源文件夾</p>
<p>source/_drafts 草稿文件夾</p>
<p>source/_posts 文章文件夾</p>
<p>themes 存放皮肤的文件夾</p>
<p>themes/landscape 默认皮肤文件夾</p>
<p>_config.yml 全局配置文件</p>
<p>db.json json格式的静态常量数据库</p>
<p>_posts目錄：Hexo存放博客文章的文件夾</p>
<p>themes目錄：存放皮肤的文件夹，默认使用官方的主題 你也可以从hexo主题頁面下载你喜欢的主題</p>
</li>
<li><p>在该文件夹下有_config.yml这个文件，找到该文件并用修改（推荐用Xcode修改）</p>
<p>调整到该配置文件的最后 然后瞎改如下选项</p>
<p>deploy:<br> type:<br> repository:<br> branch:<br>分别填上 git github的地址 master</p>
</li>
</ol>
<p>   <strong>注意：</strong> github上得仓库名必须和用户名一致</p>
<h6 id="做好了一切准备，让我们开始吧"><a href="#做好了一切准备，让我们开始吧" class="headerlink" title="做好了一切准备，让我们开始吧"></a>做好了一切准备，让我们开始吧</h6><ol>
<li>调用cmd cd到hexo的目录下，然后执行 hexo new “Hexo用法全纪录” 来创建一个.md文件。</li>
<li>创建好这个md文件之后，打开MarkDown软件编辑这个.md文件，该文件的内容最终就是博文。</li>
<li>调用命令 hexo clean 把服务器端的缓存清理一下</li>
<li>调用命令 hexo generate来生成博文</li>
<li>调用命令 hexo deploy部署到服务器上</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;date: 2016-06-23 19:32:26&lt;/p&gt;
&lt;h6 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h6&gt;&lt;ol&gt;
&lt;li&gt;在mac环境下需要配置node
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="https://bjbhy.github.io/2016/06/23/hello-world/"/>
    <id>https://bjbhy.github.io/2016/06/23/hello-world/</id>
    <published>2016-06-23T08:06:46.000Z</published>
    <updated>2016-06-23T08:58:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>我是白浩洋，一个低调的人.</p>
<h5 id="纪念一下2016年6月23日"><a href="#纪念一下2016年6月23日" class="headerlink" title="纪念一下2016年6月23日"></a>纪念一下2016年6月23日</h5><p>第一次使用gitHub的个人博客，感觉不错！</p>
<h5 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h5><p>QQ:897345401 微信同号</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我是白浩洋，一个低调的人.&lt;/p&gt;
&lt;h5 id=&quot;纪念一下2016年6月23日&quot;&gt;&lt;a href=&quot;#纪念一下2016年6月23日&quot; class=&quot;headerlink&quot; title=&quot;纪念一下2016年6月23日&quot;&gt;&lt;/a&gt;纪念一下2016年6月23日&lt;/h5&gt;&lt;p&gt;第
    
    </summary>
    
    
  </entry>
  
</feed>
